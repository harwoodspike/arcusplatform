import org.gradle.internal.os.OperatingSystem;

configurations {
	all*.exclude group: 'commons-logging', module: 'commons-logging'	
}


if( !hasProperty('iris_common_changing') ) {
	ext.iris_common_changing = false
}

class Libraries {
	def _libraries = [:]
	def propertyMissing(String name, value) { _libraries[name] = value }
	def propertyMissing(String name) { 
		if(!_libraries.containsKey(name)) {
			throw new Exception("No library named '${name}' is defined in dependencies.gradle")
		}
		return _libraries[name] 
	}
	def leftShift(Map other) { _libraries << other }
	def leftShift(Map.Entry other) { _libraries << other }
}
ext.libraries = new Libraries();

ext.libraries << [
// Zigbee
		zsmartsystems_zigbee: "com.zsmartsystems.zigbee:com.zsmartsystems.zigbee:1.2.4",
		zsmartsystems_zigbee_serial: "com.zsmartsystems.zigbee:com.zsmartsystems.zigbee.serial:1.2.4",
		zsmartsystems_zigbee_ember: "com.zsmartsystems.zigbee:com.zsmartsystems.zigbee.dongle.ember:1.2.4",

// ZWave
		openhab_zwave: "org.openhab.binding.zzsmartsystems_zigbeewave:org.openhab.binding.zwave:2.5.0-SNAPSHOT",

// Cassandra
		cassandraDriver: dependencies.create("com.datastax.cassandra:cassandra-driver-core:3.9.0:shaded") {
			exclude group: "com.codahale.metrics" // interferes with platform dropwizard metrics
			exclude group: "io.netty"
		},

		cassandraUnit: dependencies.create("org.cassandraunit:cassandra-unit:2.0.2.2") {
			exclude group: "org.slf4j", module: "slf4j-log4j12"
			exclude group: "log4j", module: "log4j"
			exclude group: "io.netty", module: "netty-all"
		},


// Apache
		commons_beanutils: "commons-beanutils:commons-beanutils:1.9.4",
		commons_cli: "commons-cli:commons-cli:1.2",
		commonsCodec: "commons-codec:commons-codec:1.10",
		commonsCollections: "commons-collections:commons-collections:3.2",
		commonsConfig: "commons-configuration:commons-configuration:1.8",
		commonsIO: "commons-io:commons-io:2.4",
		commons_math: "org.apache.commons:commons-math3:3.5",
		apacheCommonsValidator: "commons-validator:commons-validator:1.5.0",
		
		apacheCommonsExec: "org.apache.commons:commons-exec:1.3",
		apacheCommonsIO: "org.apache.commons:commons-io:1.3.2",
		apacheCommonsPool: "org.apache.commons:commons-pool2:2.4.2",

		httpClient: "org.apache.httpcomponents:httpclient:4.5.+",
		httpCore: "org.apache.httpcomponents:httpcore:4.4.+",
		httpMime: "org.apache.httpcomponents:httpmime:4.5.+",
		
		apacheCurator: dependencies.create("org.apache.curator:curator-test:2.7.0") {
			exclude group: "org.slf4j", module: "slf4j-log4j12"
			exclude group: "log4j", module: "log4j"
		},
		cxfJaxws: "org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:3.1.6",
		cxfJaxb: "org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:3.1.6",

		asyncHTTPClient: "org.asynchttpclient:async-http-client:2.10.4",

// Apache Lucene
		luceneCore: "org.apache.lucene:lucene-core:5.4.0",
		luceneAnalyzer: "org.apache.lucene:lucene-analyzers-common:5.4.0",
		luceneParser: "org.apache.lucene:lucene-queryparser:5.4.0",
		luceneMemory: "org.apache.lucene:lucene-memory:5.4.0",
		luceneQueries: "org.apache.lucene:lucene-queries:5.4.0",


// Reactive
		rxjava: "io.reactivex:rxjava:1.2.10",
		rxjava_async: "io.reactivex:rxjava-async-util:0.21.0",


// J Commander
		jcommander: "com.beust:jcommander:1.35",

// Miscellaneous
		azure_storage: "com.microsoft.azure:azure-storage:3.0.0",
		javaxServlet: "javax.servlet:javax.servlet-api:3.1.0",
		sunrise_sunset_calc: "com.luckycatlabs:SunriseSunsetCalculator:1.2",
		winzipaes: "de.idyl:winzipaes:1.0.1",
		ziputils: "com.alutam:ziputils:1.4.0",

// JAXB Dependencies
		jaxb_xjc: "com.sun.xml.bind:jaxb-xjc:2.2.7-b41",
		jaxb_impl: "com.sun.xml.bind:jaxb-impl:2.2.7-b41",
		jaxb_api: "javax.xml.bind:jaxb-api:2.2.7",

// Encryption via Bouncy Castle
		bouncycastle: "org.bouncycastle:bcprov-jdk15on:1.65",
		bouncycastle_pgp: "org.bouncycastle:bcpg-jdk15on:1.65",
		bouncycastle_pki: "org.bouncycastle:bcpkix-jdk15on:1.65",

// SQL Database
		sqlite4java: "com.almworks.sqlite4java:sqlite4java:1.0.392",

// guice dependencies
		guiceCore: "com.google.inject:guice:4.0",
		guiceServlet: "com.google.inject.extensions:guice-servlet:4.0",
		guiceMultibindings: "com.google.inject.extensions:guice-multibindings:4.0",

// governator runtime dependencies
		jacksonCore: "com.fasterxml.jackson.core:jackson-core:2.4.3",
		jacksonCoreAsl: "org.codehaus.jackson:jackson-core-asl:1.9.11",
		jacksonDatabind: "com.fasterxml.jackson.core:jackson-databind:2.10.0",
		jacksonMapper: "org.codehaus.jackson:jackson-mapper-asl:1.9.11",

// governator compile dependencies
		governator: dependencies.create("com.netflix.governator:governator:1.12.15") {
			exclude group: "com.google.inject.extensions", module: "guice-grapher"
			exclude group: "asm"
			exclude group: "com.google.code.findbugs", module: "annotations"
			exclude group: "org.apache.xbean", module: "xbean-bundleutils"
			exclude group: "com.netflix.archaius", module: "archaius-core"
		},
		governator_api: dependencies.create("com.netflix.governator:governator-api:1.12.15") {
			exclude group: "com.google.inject.extensions", module: "guice-grapher"
			exclude group: "asm"
			exclude group: "com.google.code.findbugs", module: "annotations"
			exclude group: "org.apache.xbean", module: "xbean-bundleutils"
			exclude group: "com.netflix.archaius", module: "archaius-core"
		},

// kafka dependencies
		eyekatkafka: dependencies.create("org.apache.kafka:kafka_2.11:0.10.0.0") {
			exclude group: "org.apache.zookeeper", module: "zookeeper"
			exclude group: "log4j", module: "log4j"
			exclude group: "org.slf4j", module: "slf4j-log4j12"
		},
		kafka: dependencies.create("org.apache.kafka:kafka_2.12:2.4.0") {
			exclude group: "org.apache.zookeeper", module: "zookeeper"
			exclude group: "log4j", module: "log4j"
			exclude group: "org.slf4j", module: "slf4j-log4j12"
		},
		zookeeper: dependencies.create("org.apache.zookeeper:zookeeper:3.5.7") {
			exclude group: "org.slf4j", module: "slf4j-log4j12"
			exclude group: "log4j", module: "log4j"
			exclude group: "junit", module: "junit"
			exclude group: "jline", module: "jline"
			exclude group: "io.netty", module: "netty"

		},
		// metrics compile dependencies
		metrics_core: "io.dropwizard.metrics:metrics-core:3.2.6",
		metrics_hdr: "org.mpierce.metrics.reservoir:hdrhistogram-metrics-reservoir:1.1.0",
		metrics_json: "io.dropwizard.metrics:metrics-json:3.2.6",
		metrics_jvm: "io.dropwizard.metrics:metrics-jvm:3.2.6",
		metrics_logback: "io.dropwizard.metrics:metrics-logback:3.2.6",

		prometheus_dropwizard: "io.prometheus:simpleclient_dropwizard:0.8.0",
		prometheus_servlet: "io.prometheus:simpleclient_servlet:0.8.0",

// misc dependencies
		guava: "com.google.guava:guava:19.0",
		google_guava_testlib: "com.google.guava:guava-testlib:19.0",
		gson: "com.google.code.gson:gson:2.3.1",
		commons_lang: "org.apache.commons:commons-lang3:3.8.1",
		commons_csv: "org.apache.commons:commons-csv:1.2",
		supercsv: 'net.sf.supercsv:super-csv:2.4.0',
		retrofit: "com.squareup.retrofit:retrofit:1.6.0",

		eclipse_annotation: "org.eclipse.jdt:org.eclipse.jdt.annotation:1.1.0",
		handlebars: "com.github.jknack:handlebars:2.2.2",
		javassist: "org.javassist:javassist:3.19.0-GA",
		jna: 'net.java.dev.jna:jna:4.4.0',
		jna_platform: "net.java.dev.jna:platform:3.5.0",

		javax_mail: "javax.mail:mail:1.4.1",
		jsoup: "org.jsoup:jsoup:1.8.3",

		lmax_disruptor: 'com.lmax:disruptor:3.3.2',
		sigar: 'org.fusesource:sigar:1.6.4',
		univocity: 'com.univocity:univocity-parsers:2.3.0',

		janino: 'org.codehaus.janino:commons-compiler:3.0.6',
		oshi_core: 'com.github.oshi:oshi-core:3.4.3',
		jctools: 'org.jctools:jctools-core:2.0.2',
		kxml2: 'kxml2:kxml2:2.3.0',
		jetty_servlet: 'org.eclipse.jetty:jetty-servlet:9.2.22.v20170606',


		//Swing
		swingx: "org.swinglabs:swingx:1.6",

		// Natty
		natty: "com.joestelmach:natty:0.12",

		antlr: "org.antlr:antlr-runtime:3.5.2",
		antlr4: "org.antlr:antlr4:4.5",
		antlr4_runtime: "org.antlr:antlr4-runtime:4.5",

// Formerly included in JDK
      javax_activation_api: 'javax.activation:javax.activation-api:1.2.0',
      javax_activation_impl: 'com.sun.activation:javax.activation:1.2.0',
      javax_annotation_api: 'javax.annotation:javax.annotation-api:1.3.2',

// Groovy
		groovy: "org.codehaus.groovy:groovy-all:2.5.8",

// Cucumber
		cucumber_junit: "io.cucumber:cucumber-junit:2.4.0",
		cucumber_groovy: "io.cucumber:cucumber-groovy:2.0.1",
		cucumber_java: "io.cucumber:cucumber-java8:2.4.0",


// EasyMock
		easymock: "org.easymock:easymock:3.3",
		mockito:	"org.mockito:mockito-core:1.10.+",

//Powermock
		powermock_junit:  "org.powermock:powermock-module-junit4:1.7.3",
		powermock_easymock: "org.powermock:powermock-api-easymock:1.7.3",

//Junit
		junit: "junit:junit:4.13",

// Apache Shiro
		shiro: "org.apache.shiro:shiro-core:1.3.2",
		shiro_guice: "org.apache.shiro:shiro-guice:1.3.2",
		shiro_web: "org.apache.shiro:shiro-web:1.3.2",

//Hibernate

		hibernate_entitymanager: "org.hibernate:hibernate-entitymanager:4.1.9.Final",
		hibernate_jpa: "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final",
		hibernate_core: "org.hibernate:hibernate-core:4.1.9.Final",


// Logging
		slf4j: "org.slf4j:jcl-over-slf4j:1.7.+",
		slf4jLog4j: "org.slf4j:log4j-over-slf4j:1.7.+",
		slf4jJul: "org.slf4j:jul-to-slf4j:1.7.+",
		slf4jJcl: "org.slf4j:jcl-over-slf4j:1.7.+",
		slf4jApi: "org.slf4j:slf4j-api:1.7.+",
		slf4jSimple: "org.slf4j:slf4j-simple:1.7.+",
		logback: "ch.qos.logback:logback-classic:1.2.+",


// Notifications
		sendgridJava: "com.sendgrid:sendgrid-java:4.4.1",
		sendgridJavaOld: 'com.sendgrid:sendgrid-java:2.2.0',
		sendgridHTTP: "com.sendgrid:java-http-client:4.2.0",
		pushy: dependencies.create("com.eatthepath:pushy:0.13.11") {
                        exclude group: "io.netty", module: "netty-all"
                },
		smackCore: "org.igniterealtime.smack:smack-core:4.0.7",
		smackTCP: "org.igniterealtime.smack:smack-tcp:4.0.7",
		smackExt: "org.igniterealtime.smack:smack-extensions:4.0.7",
		twilio: "com.twilio.sdk:twilio-java-sdk:4.4.4",


// JAXB Dependencies
		jaxb_xjc: "com.sun.xml.bind:jaxb-xjc:2.2.7-b41",
		jaxb_impl: "com.sun.xml.bind:jaxb-impl:2.2.7-b41",
		jaxb_api: "javax.xml.bind:jaxb-api:2.2.7",

// CXF Dependencies
		cxf_gradle_plugin: "no.nils:wsdl2java:0.8", //cxf build plugin
		cxf_version: "3.1.4",

// Open CSV
		opencsv: "com.opencsv:opencsv:3.4",

		// PDFbox
		pdfbox: "org.apache.pdfbox:pdfbox:2.0.4",

		// Alexa
		alexa: dependencies.create("com.amazon.alexa:alexa-skills-kit:1.1") {
			exclude group:"alexa-skills-kit"
			exclude group:"org.eclipse.jetty"
			exclude module:"aws-java-sdk-core"
			exclude module:"aws-java-sdk-dynamodb"
			exclude module:"aws-java-sdk-kms"
			exclude module:"aws-java-sdk-s3"
			exclude module:"aws-lambda-java-core"
			exclude module:"commons-io"
			exclude module:"org.apache.commons.io"
			exclude module:"log4j"
		},

		// Debatty
		debatty: "info.debatty:java-string-similarity:0.13",

		//Joda
		joda: "joda-time:joda-time:2.8.2",


// Azure Dependencies
		azure_storage: "com.microsoft.azure:azure-storage:3.0.0",
		azure_mgmt_storage: "com.microsoft.azure:azure-mgmt-storage:0.8.0",
		azure_bus: "com.microsoft.azure:azure-servicebus:0.9.2",


// JOGL (Graphing)
		jogl_all:  "org.jogamp.jogl:jogl-all:2.3.2",
		gluegen_rt_main:  "org.jogamp.gluegen:gluegen-rt-main:2.3.2",

// Controls FX (Swing)
		controlsfx: "org.controlsfx:controlsfx:8.20.8"

]

libraries.guice = [ libraries.guiceCore, libraries.guiceMultibindings ]
libraries.cucumber = [ libraries.cucumber_junit, libraries.cucumber_groovy, libraries.cucumber_java ]


// Netty Dependencies
if (project.hasProperty("netty_override_version"))
	ext.netty_version = "${netty_override_version}"
else
	ext.netty_version = "4.1.48.Final"
if (project.hasProperty("tcnative_override_version"))
	ext.tcnative_version = "${tcnative_override_version}"
else
	ext.tcnative_version = "1.1.33.Fork18"

ext.netty_common = "io.netty:netty-common:${netty_version}"
ext.netty_buffer = "io.netty:netty-buffer:${netty_version}"
ext.netty_transport = "io.netty:netty-transport:${netty_version}"
ext.netty_codec = "io.netty:netty-codec:${netty_version}"
ext.netty_codec_http = "io.netty:netty-codec-http:${netty_version}"
ext.netty_handler = "io.netty:netty-handler:${netty_version}"
ext.netty_all = "io.netty:netty-all:${netty_version}"
// handler proxy only exists in versions above 4.0
if(!netty_version.startsWith("4."))
	ext.netty_handler_proxy = "io.netty:netty-handler-proxy:${netty_version}"
ext.netty_epoll = "io.netty:netty-transport-native-epoll:${netty_version}"
ext.netty_epoll_linux = "io.netty:netty-transport-native-epoll:${netty_version}:linux-x86_64"
ext.netty_tcnative = "io.netty:netty-tcnative:${tcnative_version}"
ext.netty_tcnative_osx = "io.netty:netty-tcnative-boringssl-static:${tcnative_version}:osx-x86_64"
ext.netty_tcnative_linux = "io.netty:netty-tcnative-boringssl-static:${tcnative_version}:linux-x86_64"
ext.javassist = "org.javassist:javassist:3.19.0-GA"

if (OperatingSystem.current().isMacOsX()) {
	ext.netty_tcnative_lib = netty_tcnative_osx
} else {
	ext.netty_tcnative_lib = netty_tcnative_linux
}
if(!netty_version.startsWith("4.")) {
    ext.netty = [netty_handler, netty_codec_http, netty_epoll, netty_handler_proxy, netty_epoll_linux, javassist, netty_tcnative, netty_tcnative_lib]
}
else {
	ext.netty = [netty_handler, netty_codec_http, netty_epoll, netty_epoll_linux, javassist, netty_tcnative, netty_tcnative_lib]
}
