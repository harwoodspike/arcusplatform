<?xml version="1.0" encoding="UTF-8"?>
<s:service name="VideoService"
           namespace="video"
           version="1.0"
           xmlns:s="http://www.arcussmarthome.com/schema/service/1.0.0">
           
   <s:description>
   Entry points for video recordings.
   </s:description>
   
   <s:methods>
   
   <s:method name="ListRecordings" description="Lists all recordings available for a given place.">
      <s:parameter name="placeId" type="string" description="UUID of the place." optional="false"/>
      <s:parameter name="all" type="boolean" description="List all recordings, including ones marked for deletion but not yet deleted" optional="true" />
      <s:parameter name="type" type="enum" values="ANY,STREAM,RECORDING" description="Type of recording. Required to be one of the following ANY, STREAM, or RECORDING" optional="true" />
      <s:return name="recordings" type="list&lt;Recording&gt;" description="The recordings"/>
   </s:method>
   
   <s:method name="PageRecordings" description="Lists paged recordings available for a given place.">
      <s:parameter name="placeId" type="string" description="UUID of the place." optional="false"/>
      <s:parameter name="limit" type="int" description="max number of recordings per page." optional="false"/>
      <s:parameter name="token" type="string" description="Token value to start the current page.  It should come from the nextToken value from the previous response." optional="false"/>
      <s:parameter name="all" type="boolean" description="Default: false If specified and set to true all recordings, including ones marked for deletion but not yet deleted will be returned" optional="true" />
      <s:parameter 
         name="inprogress" 
         type="boolean" 
         description="Default: true If specified and set to false inprogress recordings / streams will not be shown.  Note that inprogress=false AND type=STREAM will always return an empty result." 
         optional="true" />
      <s:parameter
         name="type" 
         type="enum" 
         values="ANY,STREAM,RECORDING" 
         description="Type of recording. 
            ANY - Will return streams and recordings, this should not generally be used.
            STREAM - Will return only streams, useful for attempting to piggy-back on an existing stream.
            RECORDING - Will return only recordings, some may still be in progress and therefore missing information like duration."
        optional="true" />
      <s:parameter 
         name="latest" 
         type="timestamp" 
         description="No recordings that occur after this value will be returned. Since recordings are returned in descending order by time, recordings at the start of the list will be closer to this time.  Note if both token and latest are specified the earlier of the two values will be used." 
         optional="true" />
      <s:parameter 
         name="earliest" 
         type="timestamp" 
         description="No recordings that occur before this value will be returned. Since recordings are returned in descending order by time, recordings at the end of the list will be closer to this time." 
         optional="true" />
      <s:parameter 
         name="cameras" 
         type="set&lt;String&gt;" 
         description="Default: [] If specified, only recordings generated by the cameras in this set will be returned.  If not specified -or- the empty set, then all recordings will be returned regardless of camera." 
         optional="true" />
      <s:parameter 
         name="tags" 
         type="set&lt;String&gt;" 
         description="Default: [] If specified, only recordings with *ANY* of the given tags will be included.  If not specified -or- the empty set, then all recordings will be returned regardless of tags." 
         optional="true" />
      <s:return name="nextToken" type="string" description="the next token to continue paging with"/>
      <s:return name="recordings" type="list&lt;Recording&gt;" description="The recordings"/>
   </s:method>

   <s:method name="StartRecording" description="Starts a video recording or live streaming session.">
      <s:parameter name="placeId" type="string" description="UUID of the place." optional="false"/>
      <s:parameter name="accountId" type="string" description="UUID of the account." optional="false"/>
      <s:parameter name="cameraAddress" type="string" description="UUID of the camera." optional="false"/>
      <s:parameter name="stream" type="boolean" description="True to start live streaming, false to start recording." optional="false"/>
      <s:parameter name="duration" type="int" description="The duration to record in seconds.  If not provided the default duration of 20 minutes will be used" optional="true"/>
      <s:return name="recordingId" type="string" description="UUID of the recording that was started."/>
      <s:return name="hls" type="string" description="A URL that can be used to stream video using the HLS protocol." optional="true"/>
      <s:return name="dash" type="string" description="This attributed was deprecated in 2018.07.  A URL that can be used to stream video using the MPEG-DASH protocol." optional="true"/>
      <s:return name="preview" type="string" description="A URL that can be used to retrieve a preview image for the recording." optional="true"/>
      <s:return name="expiration" type="timestamp" description="A UTC timestamp indicating when the URLs returned are no longer valid." optional="false"/>
   </s:method>

   <s:method name="StopRecording" description="Stops a video recording or live streaming session.">
      <s:parameter name="placeId" type="string" description="UUID of the place." optional="false"/>
      <s:parameter name="recordingId" type="string" description="UUID of the recording." optional="false"/>
   </s:method>

   <s:method name="GetQuota" description="Gets the video storage quota for a place.">
      <s:parameter name="placeId" type="string" description="UUID of the place." optional="false"/>
      <s:return name="total" type="double" description="The total allowed usage in bytes."/>
      <s:return name="used" type="double" description="The current usage in bytes."/>
   </s:method>
   <s:method name="GetFavoriteQuota" description="Gets the video favorite video quota for a place.">
      <s:parameter name="placeId" type="string" description="UUID of the place." optional="false"/>
      <s:return name="total" type="int" description="The total allowed favorite videos."/>
      <s:return name="used" type="int" description="The current number of favorite videos."/>
   </s:method>
   
   <s:method name="DeleteAll" description="Delete all recordings for the given place.">
      <s:parameter name="placeId" type="string" description="UUID of the place" optional="false"/>
      <s:parameter name="includeFavorites" type="boolean" description="True if favorite recordings should be deleted also." optional="true"/>
   </s:method>
   
   </s:methods>

   <s:events>

      <s:event
         name="RecordingsDeleted"
         description="Emitted when all recordings for a place are deleted.">

         <s:parameter name="includeFavorites" type="boolean" description="True if favorite recordings were also deleted." />

      </s:event>

      <s:event
         name="QuotaReport"
         description="Emitted whenever quota is recalculated, this may not represent a change in quota, simply the current value.">

         <s:parameter name="used" type="long" description="The current usage in the unit specified"/>
         <s:parameter name="unit" type="enum" values="bytes,number" description="unit represented in used field."/>
         <s:parameter name="favorite" type="boolean" description="If the quota report is for favorite videos."/>

      </s:event>

   </s:events>

</s:service>
